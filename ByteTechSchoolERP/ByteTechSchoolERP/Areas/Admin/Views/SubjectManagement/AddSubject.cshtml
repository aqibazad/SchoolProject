@model ByteTechSchoolERP.Models.Subjects.SubjectModel
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

</head>
<style>


    .style-0 {
        border-radius: 10px;
        background: #fff;
        vertical-align: middle;
        font-size: 16px;
        padding: 20px;
        flex: 0 0 100%;
        position: relative;
        width: 100%;
        min-height: 1px;
        padding-right: 10px;
        padding-left: 10px;
        box-sizing: border-box;
        margin-top: 20px;
    }



     
    .formTitle {
        line-height: 16px;
        text-align: center;
        margin-top: 10px;
        margin: 10px 0px 0px;
        font-weight: 600;
        width: 100% !important;
        font-size: 20px;
        margin-bottom: 0px;
        font-family: Poppins, sans-serif;
        color: rgb(34, 34, 34);
        box-sizing: border-box;
    }

    .formLabel {
        background: rgba(0, 0, 0, 0) linear-gradient(87deg, rgb(94, 114, 228) 0px, rgb(130, 94, 228) 100%);
        padding-left: 3px;
        padding-right: 3px;
        font-size: 12px;
        color: rgb(255, 255, 255);
        display: block;
        margin-bottom: 8px;
        touch-action: manipulation;
        box-sizing: border-box;
        border: 0.666667px solid rgb(153, 153, 153);
        border-radius: 12px;
    }

    .requiredLabel {
        margin-top: -20px;
        position: absolute;
        margin-left: 8px;
    }

    .formInput {
        font-size: 14px;
        border-radius: 25px;
        border: 0px none rgb(73, 80, 87);
        display: block;
        width: 100%;
        padding: 8px 12px;
        line-height: 17.5px;
        color: rgb(73, 80, 87);
        background-color: rgb(255, 255, 255);
        background-image: none;
        transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;
        overflow: visible;
        margin: 0px;
        font-family: Poppins, sans-serif;
        touch-action: manipulation;
        box-sizing: border-box;
        
    }

    .inputContainer {
        border: 0.666667px solid rgb(150, 152, 214);
        border-radius: 25px;
        margin-top: 40px;
        padding: 5px;
        box-sizing: border-box;
    }

    .formSelect {
        font-size: 14px;
        border-radius: 25px;
        border: 0px none rgb(73, 80, 87);
        height: 38px;
        width: 100%;
        padding: 8px 12px;
        line-height: normal;
        color: rgb(73, 80, 87);
        background-color: rgb(255, 255, 255);
        background-image: none;
        transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;
        text-transform: none;
        margin: 0px;
        font-family: Poppins, sans-serif;
        touch-action: manipulation;
        box-sizing: border-box;
    }

    .selectDropdown {
        padding: 0px;
        height: auto;
        border: 0px none rgb(73, 80, 87);
        background: rgba(0, 0, 0, 0) none repeat scroll 0px 0px / auto padding-box border-box;
        box-shadow: none;
        border-radius: 25px;
        position: relative;
        font-size: 14px;
        display: block;
        width: 100%;
        line-height: 17.5px;
        color: rgb(73, 80, 87);
        background-color: rgba(0, 0, 0, 0);
        background-image: none;
        transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;
        box-sizing: border-box;
    }

    .buttonContainer {
        text-align: center;
        margin-bottom: 20px;
        margin-top: 30px;
        box-sizing: border-box;
    }

    .formButton {
        border-radius: 25px;
        text-transform: capitalize;
        font-size: 15px;
        padding: 10px 19px;
        cursor: pointer;
        background: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 182, 77), rgb(255, 203, 128)) repeat scroll 0% 0% / auto padding-box border-box;
        display: inline-block;
        font-weight: 400;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        user-select: none;
        line-height: 18.75px;
        transition: all 0.15s ease-in-out 0s;
        appearance: button;
        overflow: visible;
        margin: 0px;
        font-family: Poppins, sans-serif;
        touch-action: manipulation;
        box-sizing: border-box;
    }

</style>

<div class="page-wrapper">
    <div class="tab-container container-fluid mt-3">
        <div class="col-md-12">
            <div class="style-0" style="max-width: 100%;margin:0px;">
                <strong> Classes</strong> | <i class="fas fa-home home-icon"> </i> - Add New Subject
            </div>
        </div>


    </div>

    <div class="tab-container container-fluid d-md-flex">
        <div class="col-md-4 mt-4" id="classFormContainer">
            <div class="style-0" style="max-width:100%; margin:0px;" id="classFormData">
                <form id="addSubjectForm" method="post">
                    <h5 class="formTitle pt-2">Create Subject</h5>

                    <!-- Class Dropdown -->
                    <div class="inputContainer">
                        <label class="formLabel requiredLabel">Select Class*</label>
                        <select class="formInput" id="classDropdown" asp-for="ClassId" required>
                            <option value="">--Select Class--</option>
                            @foreach (var classItem in ViewBag.Classes)
                            {
                                <option value="@classItem.Value">@classItem.Text</option>
                            }
                        </select>
                    </div>

                    <!-- Section Dropdown -->
                    <div class="inputContainer">
                        <label class="formLabel requiredLabel">Select Section*</label>
                        <select  class="formInput" id="sectionDropdown" asp-for="SectonId" required>
                            <option value="">--Select Section--</option>
                            <!-- Sections will be populated dynamically -->
                        </select>
                    </div>


                    <div class="inputContainer">
                        <label class="formLabel requiredLabel">Subject Name*</label>
                        <input type="text" placeholder="Subject Name" asp-for="SubjectName" required class="formInput" />
                    </div>
                    <div class="inputContainer">
                        <label class="formLabel requiredLabel">Subject Code*</label>
                        <input type="text" placeholder="Subject Code" asp-for="SubjectCode" required class="formInput" />
                    </div>
                    <div class="inputContainer">
                        <label class="formLabel requiredLabel">Total Marks*</label>
                        <input type="text" placeholder="Total Marks" asp-for="SubjectTotalMarks" required class="formInput" />
                    </div>

                    <div class="buttonContainer">
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="col-md-8 mt-4" id="classFormContainers">
            <div class="style-0" id="classFormData" style="max-width:100%; margin:0px;">
                <div class="col-12 d-flex justify-content-center">
                    <h5 class="formTitle">Subject List</h5>
                </div>
                <br/>
                <div class="table-responsive">
                <table id="SubjectId" class="display mt-2" style="width:100%; ">
                    <thead style="background-color:rgb(94, 114, 228);height: 38px;">
                        <tr style="color: white;">
                            <th>Subject</th>
                            <th>Code</th>
                            <th>Total Marks</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be populated by DataTables -->
                    </tbody>
                </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Subject Modal (unchanged) -->
    <!-- Edit Subject Modal -->
    <div class="modal fade" id="editSubjectModal" tabindex="-1" role="dialog" aria-labelledby="editSubjectModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editSubjectModalLabel">Edit Subject</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editSubjectForm" method="post" action="@Url.Action("CreateSubject", "SubjectManagement")">
                        <input type="hidden" id="editSubjectId" name="Id" />
                       
                        <div class="inputContainer">
                            <label class="formLabel requiredLabel">Subject Name*</label>
                            <input type="text" id="editSubjectName" name="SubjectName" required class="formInput" />
                        </div>
                        <div class="inputContainer">
                            <label class="formLabel requiredLabel">Subject Code*</label>
                            <input type="text" id="editSubjectCode" name="SubjectCode" required class="formInput" />
                        </div>
                        <div class="inputContainer">
                            <label class="formLabel requiredLabel">Total Marks*</label>
                            <input type="text" id="editSubjectTotalMarks" name="SubjectTotalMarks" required class="formInput" />
                        </div>
                        <div class="buttonContainer">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            $('#classDropdown').change(function () {
                console.log("Dropdown changed");
                var classId = $(this).val();
                console.log("Selected Class ID: " + classId);
                if (classId) {
                    $.ajax({
                        url: '/Admin/SubjectManagement/GetSectionsByClass',
                        type: 'GET',
                        data: { classId: classId },
                        success: function (sections) {
                            console.log("Sections retrieved: ", sections);
                            var sectionDropdown = $('#sectionDropdown');
                            sectionDropdown.empty(); // Clear previous options
                            sectionDropdown.append('<option value="">--Select Section--</option>'); // Default option
                            $.each(sections, function (index, section) {
                                sectionDropdown.append('<option value="' + section.id + '">' + section.name + '</option>');
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error: ", error);
                        }
                    });
                } else {
                    $('#sectionDropdown').empty();
                    $('#sectionDropdown').append('<option value="">--Select Section--</option>');
                }
            });

            // Initialize the DataTable
            $('#SubjectId').DataTable({
                "ajax": {
                    "url": "/Admin/SubjectManagement/SubjectList",
                    "type": "GET",
                    "dataType": "json",
                    "dataSrc": "data"
                },
                "columns": [
                    { "data": "subjectName" },
                    { "data": "subjectCode" },
                    { "data": "subjectTotalMarks" },

                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `
                                            <div class="container">
                                                <button class="btn btn-primary btn-sm edit-btn" data-id="${data.id}" data-subject-name="${data.subjectName}" data-subject-code="${data.subjectCode}" data-subject-total-marks="${data.subjectTotalMarks}" data-bs-toggle="modal" data-bs-target="#editSubjectModal">
                                                    <i style="font-size:15px" class="fa">&#xf044;</i>
                                                </button>
                                                <button class="btn btn-danger btn-sm delete-btn" data-id="${data.id}">
                                                    <i style="font-size:15px" class="fa">&#xf1f8;</i>
                                                </button>
                                            </div>
                                        `;
                        }
                    }
                ]
            });

            // Handle form submission for adding a new subject
           $(document).ready(function () {

    // Existing code...

    // Handle form submission for adding a new subject
    $('#addSubjectForm').submit(function (e) {
        e.preventDefault();

        var subjectName = $('input[name="SubjectName"]').val().toLowerCase(); // Convert input to lowercase
        var subjectExists = false;

        // Check if the subject name already exists in the table
        $('#SubjectId').DataTable().rows().every(function () {
            var data = this.data();
            if (data.subjectName.toLowerCase() === subjectName) { // Convert table data to lowercase
                subjectExists = true;
                return false; // Exit loop
            }
        });

        if (subjectExists) {
            alert('Subject name already exists. Please choose a different name.');
            return; // Prevent form submission
        }

        var formData = $(this).serialize();

        $.ajax({
            url: '/Admin/SubjectManagement/CreateSubject',
            type: 'POST',
            data: formData,
            success: function (response) {
                if (response.isSuccess) {
                    $('#SubjectId').DataTable().ajax.reload();
                    toastr.success('Subject added successfully.');
                    $('#addSubjectForm')[0].reset();
                } else {
                    toastr.error(response.Message);
                }
            },
            error: function (xhr, status, error) {
                console.error('Error adding subject:', error);
                console.error('Status:', status);
                console.error('XHR:', xhr);
                toastr.error('An error occurred while trying to add the subject. Please try again.');
            }
        });
    });

    // Existing code...

});

            // Handle Edit Button Click
            $('#SubjectId').on('click', '.edit-btn', function () {
                var id = $(this).data('id');
                var name = $(this).data('subject-name');
                var code = $(this).data('subject-code');
                var totalMarks = $(this).data('subject-total-marks');

                $('#editSubjectId').val(id);
                $('#editSubjectName').val(name);
                $('#editSubjectCode').val(code);
                $('#editSubjectTotalMarks').val(totalMarks);
            });
              // Handle form submission for editing a subject
            $('#editSubjectForm').submit(function (e) {
                e.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: '/Admin/SubjectManagement/CreateSubject', // Ensure this endpoint handles both create and update
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.isSuccess) {
                            $('#SubjectId').DataTable().ajax.reload();
                            toastr.success(response.message);
                            $('#editSubjectModal').modal('hide');
                        } else {
                            toastr.error(response.message || 'An error occurred while trying to update the subject.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating subject:', error);
                        console.error('Status:', status);
                        console.error('XHR:', xhr);
                        toastr.error('An error occurred while trying to update the subject. Please try again.');
                    }
                });
            });

            // Handle Delete Button Click
            $('#SubjectId').on('click', '.delete-btn', function () {
                var subjectId = $(this).data('id');

                if (confirm('Are you sure you want to delete this subject?')) {
                    $.ajax({
                        url: '/Admin/SubjectManagement/DeleteSubject',
                        type: 'POST',
                        data: { id: subjectId },
                        success: function (response) {
                            if (response.isSuccess) {
                                $('#SubjectId').DataTable().ajax.reload();
                                toastr.success('Subject deleted successfully.');
                            } else {
                                toastr.error(response.Message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error deleting subject:', error);
                            console.error('Status:', status);
                            console.error('XHR:', xhr);
                            toastr.error('An error occurred while trying to delete the subject. Please try again.');
                        }
                    });
                }
            });
        });
    </script>
}
