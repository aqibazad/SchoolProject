// <auto-generated />
using System;
using ByteTechSchoolERP.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ByteTechSchoolERP.DataAccess.Migrations
{
    [DbContext(typeof(ByteTechSchoolERPContext))]
    [Migration("20241010080349_schoolerp")]
    partial class schoolerp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CampusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaffTempId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Advance", b =>
                {
                    b.Property<int>("AdvanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvanceId"));

                    b.Property<decimal>("AdvanceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("AdvanceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdvanceId");

                    b.HasIndex("StaffId");

                    b.ToTable("Advance");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AttendanceStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AttendancesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Deparments");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("PayPeriodEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayPeriodStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PayrollId");

                    b.HasIndex("StaffId");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountBankBranchNameHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeparmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfExperience")
                        .HasColumnType("int");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StaffRegistionNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Control_Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Control_Account_Code")
                        .HasColumnType("float");

                    b.Property<string>("Control_Account_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Control_Complete_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Element_AccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Element_AccountId");

                    b.ToTable("Control_Accounts");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Element_Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Element_Account_Code")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Element_Accounts");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ledger_AccountId")
                        .HasColumnType("int");

                    b.Property<int>("OpeningQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ledger_AccountId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Ledger_Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Control_AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Element_AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Ledger_Account_Code")
                        .HasColumnType("float");

                    b.Property<string>("Ledger_Account_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ledger_Complete_Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Control_AccountId");

                    b.HasIndex("Element_AccountId");

                    b.ToTable("Ledger_Accounts");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Campus.SchoolCampus", b =>
                {
                    b.Property<Guid>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubAdminnId")
                        .HasColumnType("int");

                    b.HasKey("CampusId");

                    b.HasIndex("SubAdminnId");

                    b.ToTable("SchoolCampus");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.SubjectAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectAllocations");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.ExamList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SeactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ExamLists");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.ExamSchedular", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Roomno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updateby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExamSchedulars");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.ExamTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BackgroundImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeftLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeftSignUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleSignUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PrintingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RightLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightSignUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExamTemplates");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.ExamType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExamTypes");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimumPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Exam.Term", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.HR.StaffTemp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StaffTemps");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.HomeDiary.Diary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HomeworkDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmissioDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("HomeDiary");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.HomeDiary.HomeWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissioDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fileurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeWork");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Hostel.HostelRoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostelRoomTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostelRoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HostelRoomTypes");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.InstitudesProfile.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Lesson.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Marks.Marks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExamListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExamSchedularId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ObtainMarks")
                        .HasColumnType("float");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Subject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalMarks")
                        .HasColumnType("float");

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamListId");

                    b.HasIndex("ExamSchedularId");

                    b.HasIndex("StudentId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Parents.Parent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Students.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianCNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianCNICBackUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianCNICFrontUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GuardianIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("GuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianOtherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianProfileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDocumentsTitle1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDocumentsTitle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDocumentsUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDocumentsUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentCNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ParentIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentOtherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PreviousObtainedMarks")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PreviousRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousSchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PreviousTotalMarks")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RelationWithGuardian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationWithParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLeavingCertificateUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentFormBUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentProfileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SectionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Students.StudentAttendance", b =>
                {
                    b.Property<Guid>("StudentAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromoteClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromoteSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentAttendanceId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.SubAdmin.SubAdminn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNICNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubAdminn");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Subjects.SubjectModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectTotalMarks")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectModels");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.TimeTable.ClassTimetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffTempId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("Startfrom")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("Startto")
                        .HasColumnType("time");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ClassTimetables");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.TimeTable.TimetableEntries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassTimetableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaffTempId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TimeFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassTimetableId");

                    b.ToTable("TimetableEntries");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Topic.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Vourchars.Receipt_Vouchers", b =>
                {
                    b.Property<int>("RV_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RV_ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drawn_Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("ItemFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual_Voucher_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherNum")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("RV_ID");

                    b.HasIndex("InventoryId");

                    b.ToTable("Receipt_Vouchers");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Vourchars.Reciept_Voucher_payment", b =>
                {
                    b.Property<int>("RVP_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RVP_ID"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Control_Account_Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<int?>("Element_Account_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Ledger_AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Ledger_Account_Code")
                        .HasColumnType("int");

                    b.Property<double?>("PreviousBalance")
                        .HasColumnType("float");

                    b.Property<int?>("RV_ID")
                        .HasColumnType("int");

                    b.Property<double?>("RemainingBalance")
                        .HasColumnType("float");

                    b.Property<string>("TransType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RVP_ID");

                    b.HasIndex("Ledger_AccountId");

                    b.HasIndex("RV_ID");

                    b.ToTable("Reciept_Voucher_Payments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Advance", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.HRModels.Staff", "Staff")
                        .WithMany("Advances")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Attendance", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.HRModels.Staff", "Staff")
                        .WithMany("Attendances")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Loan", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.HRModels.Staff", "Staff")
                        .WithMany("Loans")
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Payroll", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.HRModels.Staff", "Staff")
                        .WithMany("Payrolls")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Staff", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.HRModels.Department", "Department")
                        .WithMany("Staffs")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Control_Account", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Element_Account", "Element_Account")
                        .WithMany("Control_Accounts")
                        .HasForeignKey("Element_AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element_Account");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Inventory", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Ledger_Account", "Ledger_Account")
                        .WithMany("Inventories")
                        .HasForeignKey("Ledger_AccountId");

                    b.Navigation("Ledger_Account");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Ledger_Account", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Control_Account", "Control_Account")
                        .WithMany("Ledger_Accounts")
                        .HasForeignKey("Control_AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Element_Account", "Element_Account")
                        .WithMany("Ledger_Accounts")
                        .HasForeignKey("Element_AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Control_Account");

                    b.Navigation("Element_Account");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Campus.SchoolCampus", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.SubAdmin.SubAdminn", null)
                        .WithMany("Campuses")
                        .HasForeignKey("SubAdminnId");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.Section", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany("Sections")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.SubjectAllocation", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("ByteTechSchoolERP.Models.Subjects.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("Class");

                    b.Navigation("Section");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.HomeDiary.Diary", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.Subjects.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Section");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.HomeDiary.HomeWork", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Marks.Marks", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Exam.ExamList", "ExamList")
                        .WithMany()
                        .HasForeignKey("ExamListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.Exam.ExamSchedular", "ExamSchedular")
                        .WithMany()
                        .HasForeignKey("ExamSchedularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.Models.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("ExamList");

                    b.Navigation("ExamSchedular");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Students.Student", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ByteTechSchoolERP.Models.Parents.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId");

                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.Navigation("Class");

                    b.Navigation("Parent");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Students.StudentAttendance", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("ByteTechSchoolERP.Models.ClassAndSection.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("ByteTechSchoolERP.Models.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Class");

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.TimeTable.TimetableEntries", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.TimeTable.ClassTimetable", "ClassTimetable")
                        .WithMany("timetableEntries")
                        .HasForeignKey("ClassTimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTimetable");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Vourchars.Receipt_Vouchers", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Vourchars.Reciept_Voucher_payment", b =>
                {
                    b.HasOne("ByteTechSchoolERP.Models.Accounts.Ledger_Account", "Ledger_Account")
                        .WithMany()
                        .HasForeignKey("Ledger_AccountId");

                    b.HasOne("ByteTechSchoolERP.Models.Vourchars.Receipt_Vouchers", "Receipt_Vouchers")
                        .WithMany("Receipt_Voucher_Payments")
                        .HasForeignKey("RV_ID");

                    b.Navigation("Ledger_Account");

                    b.Navigation("Receipt_Vouchers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ByteTechSchoolERP.DataAccess.Data.ByteTechSchoolERPUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Department", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("ByteTechSchoolERP.DataAccess.HRModels.Staff", b =>
                {
                    b.Navigation("Advances");

                    b.Navigation("Attendances");

                    b.Navigation("Loans");

                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Control_Account", b =>
                {
                    b.Navigation("Ledger_Accounts");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Element_Account", b =>
                {
                    b.Navigation("Control_Accounts");

                    b.Navigation("Ledger_Accounts");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Accounts.Ledger_Account", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.ClassAndSection.Class", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Parents.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.SubAdmin.SubAdminn", b =>
                {
                    b.Navigation("Campuses");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.TimeTable.ClassTimetable", b =>
                {
                    b.Navigation("timetableEntries");
                });

            modelBuilder.Entity("ByteTechSchoolERP.Models.Vourchars.Receipt_Vouchers", b =>
                {
                    b.Navigation("Receipt_Voucher_Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
